// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupermarketAPI.Data;

#nullable disable

namespace SupermarketAPI.Migrations
{
    [DbContext(typeof(SupermarketContext))]
    [Migration("20250702011347_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SupermarketAPI.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BillId")
                        .HasName("PK__Bill__11F2FC4A5A8FB824");

                    b.HasIndex("OrderId");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.BillDetail", b =>
                {
                    b.Property<int>("BillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BillDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillDetailId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("BillID");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.HasKey("BillDetailId")
                        .HasName("PK__Bill_Det__793CAF759BA96420");

                    b.HasIndex("BillId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Bill_Details", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BrandId")
                        .HasName("PK__Brands__DAD4F3BE4E577760");

                    b.HasIndex(new[] { "BrandName" }, "UQ__Brands__2206CE9BEBCF4C95")
                        .IsUnique();

                    b.HasIndex(new[] { "Slug" }, "UQ__Brands__BC7B5FB6C30DC078")
                        .IsUnique();

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__51BCD7971598ECB8");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CartItemID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("CartID");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("DiscountID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("CartItemId")
                        .HasName("PK__Cart_Ite__488B0B2A3A1056F0");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "CartId", "ProductId" }, "UQ_Cart_Items")
                        .IsUnique();

                    b.ToTable("Cart_Items", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__19093A2B39536F26");

                    b.HasIndex("ParentId");

                    b.HasIndex(new[] { "Slug" }, "UQ__Categori__BC7B5FB666FCE0EB")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("CreditCardExpiry")
                        .HasColumnType("date");

                    b.Property<string>("CreditCardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B8C00CD07E");

                    b.HasIndex(new[] { "Username" }, "UQ__Customer__536C85E4B3F73809")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D10534F240B2B8")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DiscountID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__E43F6DF61BD02EEC");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Favorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavoriteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favorite__CE74FAF5E1D35CD3");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "CustomerId", "ProductId" }, "UQ_Favorites")
                        .IsUnique();

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime>("DateOfPurchase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF49DE8612");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SupermarketAPI.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("OrderDetailId")
                        .HasName("PK__Order_De__D3B9D30C00CCC935");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_Details", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED311A6113");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "Slug" }, "UQ__Products__BC7B5FB61194A527")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SupermarketAPI.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductCategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("ProductCategoryId")
                        .HasName("PK__Product___3224ECEE8B21231E");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "ProductId", "CategoryId" }, "UQ_Product_Categories")
                        .IsUnique();

                    b.ToTable("Product_Categories", (string)null);
                });

            modelBuilder.Entity("SupermarketAPI.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("GiftProductId")
                        .HasColumnType("int")
                        .HasColumnName("GiftProductID");

                    b.Property<int?>("MinOrderQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("MinOrderValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PromotionType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42F2F73245278");

                    b.HasIndex("GiftProductId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RatingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RatingId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("RatingScore")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.HasKey("RatingId")
                        .HasName("PK__Ratings__FCCDF85CC345F189");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "CustomerId", "ProductId" }, "UQ_Ratings")
                        .IsUnique();

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Bill", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Order", "Order")
                        .WithMany("Bills")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Bill_OrderID");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SupermarketAPI.Models.BillDetail", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Bill", "Bill")
                        .WithMany("BillDetails")
                        .HasForeignKey("BillId")
                        .IsRequired()
                        .HasConstraintName("FK_Bill_Details_BillID");

                    b.HasOne("SupermarketAPI.Models.Promotion", "Promotion")
                        .WithMany("BillDetails")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK_Bill_Details_PromotionID");

                    b.Navigation("Bill");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Cart", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Cart_CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SupermarketAPI.Models.CartItem", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_Items_CartID");

                    b.HasOne("SupermarketAPI.Models.Discount", "Discount")
                        .WithMany("CartItems")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK_Cart_Items_DiscountID");

                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Cart_Items_ProductID");

                    b.Navigation("Cart");

                    b.Navigation("Discount");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Category", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Category", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Categories_ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Discount", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Discounts_ProductID");

                    b.HasOne("SupermarketAPI.Models.Promotion", "Promotion")
                        .WithMany("Discounts")
                        .HasForeignKey("PromotionId")
                        .IsRequired()
                        .HasConstraintName("FK_Discounts_PromotionID");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Favorite", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Customer", "Customer")
                        .WithMany("Favorites")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Favorites_CustomerID");

                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Favorites_ProductID");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Order", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_CustomerID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SupermarketAPI.Models.OrderDetail", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Details_OrderID");

                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Details_ProductID");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Product", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK_Products_BrandID");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SupermarketAPI.Models.ProductCategory", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Categories_CategoryID");

                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Product_Categories_ProductID");

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Promotion", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Product", "GiftProduct")
                        .WithMany("Promotions")
                        .HasForeignKey("GiftProductId")
                        .HasConstraintName("FK_Promotions_GiftProductID");

                    b.Navigation("GiftProduct");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Rating", b =>
                {
                    b.HasOne("SupermarketAPI.Models.Customer", "Customer")
                        .WithMany("Ratings")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Ratings_CustomerID");

                    b.HasOne("SupermarketAPI.Models.Product", "Product")
                        .WithMany("Ratings")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Ratings_ProductID");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Bill", b =>
                {
                    b.Navigation("BillDetails");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Category", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Favorites");

                    b.Navigation("Orders");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Discount", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Order", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Discounts");

                    b.Navigation("Favorites");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductCategories");

                    b.Navigation("Promotions");

                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("SupermarketAPI.Models.Promotion", b =>
                {
                    b.Navigation("BillDetails");

                    b.Navigation("Discounts");
                });
#pragma warning restore 612, 618
        }
    }
}
